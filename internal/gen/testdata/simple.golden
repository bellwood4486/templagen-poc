// Code generated by templagen; DO NOT EDIT.
package x

import (
	_ "embed"
	"fmt"
	"io"
	"text/template"
)

//go:embed tpl.tmpl
var tplTplSource string

// Templates returns a map of all templates
func Templates() map[string]*template.Template {
	return map[string]*template.Template{
		"tpl": template.Must(template.New("tpl").Option("missingkey=error").Parse(tplTplSource)),
	}
}

type TplUser struct {
	Name string
}

// Tpl represents parameters for tpl template
type Tpl struct {
	Message string
	User TplUser
}

// RenderTpl renders the tpl template
func RenderTpl(w io.Writer, p Tpl) error {
	tmpl, ok := Templates()["tpl"]
	if !ok {
		return fmt.Errorf("template %q not found", "tpl")
	}
	return tmpl.Execute(w, p)
}

// Render renders a template by name with the given data
func Render(w io.Writer, name string, data any) error {
	tmpl, ok := Templates()[name]
	if !ok {
		return fmt.Errorf("template %q not found", name)
	}
	return tmpl.Execute(w, data)
}
