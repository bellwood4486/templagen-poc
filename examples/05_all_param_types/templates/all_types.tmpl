{{/* @param Name string */}}
{{/* @param Age int */}}
{{/* @param Score int64 */}}
{{/* @param Price float64 */}}
{{/* @param Active bool */}}
{{/* @param CreatedAt time.Time */}}

{{/* @param Email *string */}}
{{/* @param PhoneNumber *string */}}
{{/* @param MiddleScore *int */}}
{{/* @param Discount *float64 */}}

{{/* @param Tags []string */}}
{{/* @param CategoryIDs []int */}}
{{/* @param Ratings []float64 */}}
{{/* @param Flags []bool */}}

{{/* @param Metadata map[string]string */}}
{{/* @param Counters map[string]int */}}
{{/* @param Prices map[string]float64 */}}
{{/* @param Features map[string]bool */}}

{{/* @param User.ID int64 */}}
{{/* @param User.Name string */}}
{{/* @param User.Email string */}}

{{/* @param Product.SKU string */}}
{{/* @param Product.Price float64 */}}
{{/* @param Product.InStock bool */}}

{{/* @param Items []struct{ID int64; Title string; Tags []string; Price float64} */}}
{{/* @param OptionalItems *[]string */}}
{{/* @param Records []struct{Name string; Age int; Score *int} */}}

=== All Param Types Example ===

## 1. Basic Types
Name: {{ .Name }}
Age: {{ .Age }}
Score: {{ .Score }}
Price: ${{ .Price }}
Active: {{ .Active }}
Created At: {{ .CreatedAt.Format "2006-01-02 15:04:05" }}

## 2. Pointer Types (Optional)
{{- if .Email }}
Email: {{ .Email }}
{{- else }}
Email: (not provided)
{{- end }}
{{- if .PhoneNumber }}
Phone: {{ .PhoneNumber }}
{{- else }}
Phone: (not provided)
{{- end }}
{{- if .MiddleScore }}
Middle Score: {{ .MiddleScore }}
{{- else }}
Middle Score: (not provided)
{{- end }}
{{- if .Discount }}
Discount: {{ .Discount }}%
{{- else }}
Discount: (not provided)
{{- end }}

## 3. Slice Types
Tags: {{ range $i, $tag := .Tags }}{{ if $i }}, {{ end }}{{ $tag }}{{ end }}
Category IDs: {{ range $i, $id := .CategoryIDs }}{{ if $i }}, {{ end }}{{ $id }}{{ end }}
Ratings: {{ range $i, $rating := .Ratings }}{{ if $i }}, {{ end }}{{ $rating }}{{ end }}
Flags: {{ range $i, $flag := .Flags }}{{ if $i }}, {{ end }}{{ $flag }}{{ end }}

## 4. Map Types
Metadata:
{{- range $key, $value := .Metadata }}
  - {{ $key }}: {{ $value }}
{{- end }}
Counters:
{{- range $key, $value := .Counters }}
  - {{ $key }}: {{ $value }}
{{- end }}
Prices:
{{- range $key, $value := .Prices }}
  - {{ $key }}: ${{ $value }}
{{- end }}
Features:
{{- range $key, $value := .Features }}
  - {{ $key }}: {{ $value }}
{{- end }}

## 5. Struct Types
User: ID={{ .User.ID }}, Name={{ .User.Name }}, Email={{ .User.Email }}
Product: SKU={{ .Product.SKU }}, Price=${{ .Product.Price }}, InStock={{ .Product.InStock }}

## 6. Complex/Nested Types

### Items (slice of structs):
{{- range .Items }}
- ID: {{ .ID }}, Title: {{ .Title }}, Price: ${{ .Price }}
  Tags: {{ range $i, $tag := .Tags }}{{ if $i }}, {{ end }}{{ $tag }}{{ end }}
{{- end }}

### Optional Items:
{{- if .OptionalItems }}
{{- range .OptionalItems }}
- {{ . }}
{{- end }}
{{- else }}
(not provided)
{{- end }}

### Records (slice of structs with optional fields):
{{- range .Records }}
- Name: {{ .Name }}, Age: {{ .Age }}
  Score: {{ if .Score }}{{ .Score }}{{ else }}(not set){{ end }}
{{- end }}
