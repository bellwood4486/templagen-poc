// Code generated by templagen; DO NOT EDIT.
package main

import (
	_ "embed"
	"fmt"
	"io"
	"text/template"
)

//go:embed templates/user.tmpl
var userTplSource string

// Templates returns a map of all templates
func Templates() map[string]*template.Template {
	return map[string]*template.Template{
		"user": template.Must(template.New("user").Option("missingkey=error").Parse(userTplSource)),
	}
}

type UserItemsItem struct {
	ID int64
	Price float64
	Title string
}

type UserUser struct {
	Age int
	Email *string
	Name string
}

// User represents parameters for user template
type User struct {
	Items []UserItemsItem
	User UserUser
}

// RenderUser renders the user template
func RenderUser(w io.Writer, p User) error {
	tmpl, ok := Templates()["user"]
	if !ok {
		return fmt.Errorf("template %q not found", "user")
	}
	return tmpl.Execute(w, p)
}

// Render renders a template by name with the given data
func Render(w io.Writer, name string, data any) error {
	tmpl, ok := Templates()[name]
	if !ok {
		return fmt.Errorf("template %q not found", name)
	}
	return tmpl.Execute(w, data)
}
